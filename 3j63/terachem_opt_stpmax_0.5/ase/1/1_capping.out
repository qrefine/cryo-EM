Startfile from command line: /home/lum/3j63/opt2_clustering/ase/1/1_capping.sp


       ***********************************************************
       *                    TeraChem v1.93P                      *
       *                 Hg Version: 79b87f121f2d                *
       *                   Production Version                    *
       *                Compiled without textures                *
       *           Chemistry at the Speed of Graphics!           *
       ***********************************************************
       * This program may only be used in connection with        *
       * a valid license from PetaChem, LLC. Use of this program *
       * or results thereof indicates acceptance of all terms    *
       * and conditions stated in the license and that a valid   *
       * license agreement between the user and PetaChem, LLC    *
       * exists. PetaChem, LLC does not warrant the correctness  *
       * of results or their suitability for any purpose.        *
       * Please email bugs, suggestions, and comments to         *
       *                  help@petachem.com                      *
       *                                                         *
       ***********************************************************


       ***********************************************************
       *  Compiled by toddmtz      Wed Aug 16 03:32:31 PDT 2017  *
       *  Supported architectures: sm_20 sm_30 sm_50 sm_60       *
       *  Cuda compilation tools, release 8.0, V8.0.44           *
       ***********************************************************


 Job started   Sun Apr 28 08:53:32 2019
 On cu35 (available memory: 51074 MB)

######################################### RUNTIME INFO ##########################################
/public/qmsoft/TeraChem/bin/terachem /home/lum/3j63/opt2_clustering/ase/1/1_capping.sp 

NVRM version: NVIDIA UNIX x86_64 Kernel Module  396.26  Mon Apr 30 18:01:39 PDT 2018
GCC version:  gcc version 4.8.5 20150623 (Red Hat 4.8.5-4) (GCC) 

	linux-vdso.so.1 (0x00007fffb371b000)
	libcurl.so.4 => /lib64/libcurl.so.4 (0x00002b68fd746000)
	libintbox.so.1 => /public/qmsoft/TeraChem/lib/libintbox.so.1 (0x00002b68fd9ae000)
	libthcbox.so.1 => /public/qmsoft/TeraChem/lib/libthcbox.so.1 (0x00002b691d5bc000)
	libgridbox.so.1 => /public/qmsoft/TeraChem/lib/libgridbox.so.1 (0x00002b691f126000)
	libdftbox.so.1 => /public/qmsoft/TeraChem/lib/libdftbox.so.1 (0x00002b691f617000)
	libcublas.so.8.0 => /public/qmsoft/TeraChem/lib/libcublas.so.8.0 (0x00002b691f928000)
	libcufft.so.8.0 => /public/qmsoft/TeraChem/lib/libcufft.so.8.0 (0x00002b69222d8000)
	libcuda.so.1 => /public/qmsoft/TeraChem/lib/libcuda.so.1 (0x00002b692b126000)
	libcudart.so.8.0 => /public/qmsoft/TeraChem/lib/libcudart.so.8.0 (0x00002b692c0a6000)
	libcrypto.so.10 => /lib64/libcrypto.so.10 (0x00002b692c30c000)
	libssl.so.10 => /lib64/libssl.so.10 (0x00002b692c6f3000)
	libm.so.6 => /lib64/libm.so.6 (0x00002b692c960000)
	libcilkrts.so.5 => /public/qmsoft/TeraChem/lib/libcilkrts.so.5 (0x00002b692cc62000)
	libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00002b692cea3000)
	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00002b692d1ab000)
	libpthread.so.0 => /lib64/libpthread.so.0 (0x00002b692d3c1000)
	libdl.so.2 => /lib64/libdl.so.2 (0x00002b692d5df000)
	libc.so.6 => /lib64/libc.so.6 (0x00002b692d7e3000)
	/lib64/ld-linux-x86-64.so.2 (0x00002b68fd523000)
	libidn.so.11 => /lib64/libidn.so.11 (0x00002b692db90000)
	libssh2.so.1 => /lib64/libssh2.so.1 (0x00002b692ddc3000)
	libssl3.so => /lib64/libssl3.so (0x00002b692dfed000)
	libsmime3.so => /lib64/libsmime3.so (0x00002b692e22f000)
	libnss3.so => /lib64/libnss3.so (0x00002b692e456000)
	libnssutil3.so => /lib64/libnssutil3.so (0x00002b692e77c000)
	libplds4.so => /lib64/libplds4.so (0x00002b692e9a8000)
	libplc4.so => /lib64/libplc4.so (0x00002b692ebac000)
	libnspr4.so => /lib64/libnspr4.so (0x00002b692edb1000)
	libgssapi_krb5.so.2 => /lib64/libgssapi_krb5.so.2 (0x00002b692efef000)
	libkrb5.so.3 => /lib64/libkrb5.so.3 (0x00002b692f23b000)
	libk5crypto.so.3 => /lib64/libk5crypto.so.3 (0x00002b692f520000)
	libcom_err.so.2 => /lib64/libcom_err.so.2 (0x00002b692f752000)
	liblber-2.4.so.2 => /lib64/liblber-2.4.so.2 (0x00002b692f956000)
	libldap-2.4.so.2 => /lib64/libldap-2.4.so.2 (0x00002b692fb65000)
	libz.so.1 => /lib64/libz.so.1 (0x00002b692fdb8000)
	librt.so.1 => /lib64/librt.so.1 (0x00002b692ffce000)
	libnvidia-fatbinaryloader.so.396.26 => /lib64/libnvidia-fatbinaryloader.so.396.26 (0x00002b69301d6000)
	libkrb5support.so.0 => /lib64/libkrb5support.so.0 (0x00002b6930422000)
	libkeyutils.so.1 => /lib64/libkeyutils.so.1 (0x00002b6930631000)
	libresolv.so.2 => /lib64/libresolv.so.2 (0x00002b6930835000)
	libsasl2.so.3 => /lib64/libsasl2.so.3 (0x00002b6930a4c000)
	libselinux.so.1 => /lib64/libselinux.so.1 (0x00002b6930c69000)
	libcrypt.so.1 => /lib64/libcrypt.so.1 (0x00002b6930e8e000)
	libpcre.so.1 => /lib64/libpcre.so.1 (0x00002b69310c5000)
	liblzma.so.5 => /lib64/liblzma.so.5 (0x00002b6931326000)
#################################################################################################

       ********************** License Check **********************
       * Use license from: /public/qmsoft/TeraChem/license.dat
       * Available Host id: 0CC47AE5BB3E
       * Available Host id: 0CC47AE5BB3F
       * Available Host id: 5254009482E9
       * Available Host id: 5254009482E9
       * License Host id: 0CC47AE5BB3E
       * License expires: 2019-10-21
       ********************** License OK *************************
  _________________________________
 |         DFTD3 V3.0 Rev 2        |
 | S.Grimme, University Bonn       |
 |           Aug  2013             |
  _________________________________
 
 Please cite DFT-D3 work done with this code as:
 S. Grimme, J. Antony, S. Ehrlich and H. Krieg,
 J. Chem. Phys. 132 (2010), 154104
 If used with BJ-damping cite also
 S. Grimme, S. Ehrlich and L. Goerigk,
 J. Comput. Chem. 32 (2011), 1456-1465
 For DFT-D2 the reference is
 S. Grimme, J. Comput. Chem., 27 (2006), 1787-1799
 
Scratch directory: /tmp/lum/3j63/opt2_clustering/ase/1/scr
Random number seed: 217966273

XYZ coordinates /home/lum/3j63/opt2_clustering/ase/1/1_capping.xyz
Molden File Output: /tmp/lum/3j63/opt2_clustering/ase/1/scr/1_capping.molden
Using basis set: 6-31g
Spin multiplicity: 1
DIIS will use up to 10 vectors.
WF convergence threshold: 3.00e-05
Using DIIS algorithm to converge WF
Maximum number of SCF iterations: 200
Incremental fock with rebuild every 8 iterations
Will switch to conventional Fock if diffuse functions are detected
X-matrix tolerance: 1.00e-04
PRECISION: DYNAMIC
DFT Functional requested: hf
Method: Hartree-Fock  with dispersion correction
Wavefunction: RESTRICTED
Initial guess generated by maximum overlap

********************************************
**** SINGLE POINT GRADIENT CALCULATIONS ****
********************************************
SCF:   Initial guess is taken from previous step
COSMO model for polarizable continuum model enabled

using 4 out of 4 CUDA devices
   Device 0:  GeForce GTX 1080 Ti, 11178MB, CC 6.1 -- CPU THREAD 0
   Device 1:  GeForce GTX 1080 Ti, 11178MB, CC 6.1 -- CPU THREAD 1
   Device 2:  GeForce GTX 1080 Ti, 11178MB, CC 6.1 -- CPU THREAD 2
   Device 3:  GeForce GTX 1080 Ti, 11178MB, CC 6.1 -- CPU THREAD 3
-------------------------------------------------------------------
Compiled with MAGMA support.  MAGMA parameters:
    Matrices larger than 5000 square will be treated with MAGMA
       (Change by setting the MagmaMinN environment variable)
    Magma will use 1 out of 4 GPUs
       (Change by setting the MagmaNGPUs environment variable)
-------------------------------------------------------------------
 CPU Memory Available: 8018.12 MegaWords 
 GPU Memory Available: 1141.31 MegaWords 
 Maximum recommended basis set size: 12200 basis functions
 (limited by GPU memory)
-------------------------------------------------------------------
Not using d-functions. Configuring GPUs accordingly.
0: CUBLAS initialized, available GPU memory: 8170MB
1: CUBLAS initialized, available GPU memory: 8170MB
2: CUBLAS initialized, available GPU memory: 8170MB
3: CUBLAS initialized, available GPU memory: 8170MB


Basis set:       6-31g
Total atoms:     600
Total charge:    -1
Total electrons: 2132 (1066-alpha, 1066-beta)
Number electrons modeled by ECPs: 0
Total orbitals:  3136
Total AO shells: 2030 (1477 S-shells; 553 P-shells; 0 D-shells; 0 F-shells; 0 G-shells)
Spin multiplicity: 1
Nuclear repulsion energy (QM atoms): 121927.199952564450 a.u.

DFTD Energy:    -4.8326790 hartree
=COSMO= Number of H atoms in QM atoms:324
=COSMO= Number of Heavy atoms in QM atoms:276
reached first line of InitCosmoSwigNoMatrix
q is allocated
B is allocated
Bz is allocated
z is allocated
c is allocated
=COSMO= No Matrix Cosmo Initialization finished.
=COSMO= ++++++++++++++++++++++++++++++ COSMO parameters ++++++++++++++++++++++++++++++
=COSMO= I. Cavity Information:
=COSMO= SAS(Solvent accesible surface) initialization finished
=COSMO= Time for initializing Molecular Surface:1.03068896 (sec)
=COSMO= Time for initializing cosmo calculation:0.33069000 (sec)
=COSMO= Cavity effective radius(Angstrom) (r_solv+r_vdw-dsc) was written into /tmp/lum/3j63/opt2_clustering/ase/1/scr/ratom.txt
=COSMO= Solvent Dielectric Constant:78.390000
=COSMO= Cosmo Solvent radius:0.000000
=COSMO= Cosmo charge scaling method:0
=COSMO= Cavity built with Lebedev Grid
=COSMO= Grid points/QM Hydrogen: 110
=COSMO= Grid points/QM Heavy atom: 110
=COSMO= Herbert Switching-Gaussian method turned on
=COSMO= After removing points inside of SAS:
=COSMO= Total number of segments on molecular surface:31325
=COSMO= Number of segments belonging to QM atoms:31325
=COSMO= Total surface area of cavity: 4029.0795(Angstrom^2)
=COSMO= Total volume of cavity: 2290.2457 (Angstrom^3)
=COSMO= II. COSMO integral options:
=COSMO= Building COMSO c vector with original algorithm
=COSMO= COSMO one-electron integral threshold: 1e-12 
=COSMO= III. Linear solver options:
=COSMO= Initialize COSMO for A matrix in no matrix storage form
=COSMO= CG precondtioner:Jacobi
=COSMO= Tight CG convergence threshold:1e-06
=COSMO= CG dynamic threshold: on
=COSMO= Adjust CG convergence threshold dynamically
=COSMO= IV. PCM field read/write options:
=COSMO= PCM field is not written to files
=COSMO= No PCM field file is read in
=COSMO= ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                      *** Start SCF Iterations ***

 Iter     DIIS Error       Energy change         Energy              E_PCM      Time(s)
---------------------------------------------------------------------------------------
         >>> Purifying P... IDMP = 4.74e-14 <<<
THRESPDP set to 1.00e+00
   1     0.2552697295  -13448.3757081143  -13448.3757081143     -1.5216929107   23.52  
   2     0.1809616624     -66.4877325598  -13514.8634406741     -1.0824910278   24.05  
   3     0.0518630201      -9.1737528066  -13524.0371934806     -1.2379576189   23.02  
   4     0.0192336972      -1.0394681943  -13525.0766616750     -1.1576072068   22.09  
THRESPDP set to 4.28e-05
   5     0.0088276250      -0.1595303365  -13525.2361920115     -1.2067127152   25.28  
   6     0.0057603203      -0.0157704705  -13525.2519624820     -1.2171623287   19.69  
   7     0.0035455691      -0.0029064242  -13525.2548689062     -1.2223460242   18.41  
   8     0.0019724828      -0.0006094100  -13525.2554783162     -1.2248515742   17.27  
   9     0.0012001505      -0.0000997110  -13525.2555780271     -1.2254699483   16.30  
  10     0.0005950957      -0.0000270704  -13525.2556050976     -1.2257022969   15.59  

 Job finished: Sun Apr 28 08:57:28 2019

