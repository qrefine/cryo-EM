Startfile from command line: /home/lum/5ly6/refine12_weight_0.1_stpmax_8/ase/7/7_capping.sp


       ***********************************************************
       *                    TeraChem v1.93P                      *
       *                 Hg Version: 79b87f121f2d                *
       *                   Production Version                    *
       *                Compiled without textures                *
       *           Chemistry at the Speed of Graphics!           *
       ***********************************************************
       * This program may only be used in connection with        *
       * a valid license from PetaChem, LLC. Use of this program *
       * or results thereof indicates acceptance of all terms    *
       * and conditions stated in the license and that a valid   *
       * license agreement between the user and PetaChem, LLC    *
       * exists. PetaChem, LLC does not warrant the correctness  *
       * of results or their suitability for any purpose.        *
       * Please email bugs, suggestions, and comments to         *
       *                  help@petachem.com                      *
       *                                                         *
       ***********************************************************


       ***********************************************************
       *  Compiled by toddmtz      Wed Aug 16 03:32:31 PDT 2017  *
       *  Supported architectures: sm_20 sm_30 sm_50 sm_60       *
       *  Cuda compilation tools, release 8.0, V8.0.44           *
       ***********************************************************


 Job started   Fri May 31 08:37:01 2019
 On cu33 (available memory: 56903 MB)

######################################### RUNTIME INFO ##########################################
/public/qmsoft/TeraChem/bin/terachem /home/lum/5ly6/refine12_weight_0.1_stpmax_8/ase/7/7_capping.sp 

NVRM version: NVIDIA UNIX x86_64 Kernel Module  396.26  Mon Apr 30 18:01:39 PDT 2018
GCC version:  gcc version 4.8.5 20150623 (Red Hat 4.8.5-4) (GCC) 

	linux-vdso.so.1 (0x00007ffee5fb6000)
	libcurl.so.4 => /lib64/libcurl.so.4 (0x00002b7af9add000)
	libintbox.so.1 => /public/qmsoft/TeraChem/lib/libintbox.so.1 (0x00002b7af9d45000)
	libthcbox.so.1 => /public/qmsoft/TeraChem/lib/libthcbox.so.1 (0x00002b7b19953000)
	libgridbox.so.1 => /public/qmsoft/TeraChem/lib/libgridbox.so.1 (0x00002b7b1b4bd000)
	libdftbox.so.1 => /public/qmsoft/TeraChem/lib/libdftbox.so.1 (0x00002b7b1b9ae000)
	libcublas.so.8.0 => /public/qmsoft/TeraChem/lib/libcublas.so.8.0 (0x00002b7b1bcbf000)
	libcufft.so.8.0 => /public/qmsoft/TeraChem/lib/libcufft.so.8.0 (0x00002b7b1e66f000)
	libcuda.so.1 => /public/qmsoft/TeraChem/lib/libcuda.so.1 (0x00002b7b274bd000)
	libcudart.so.8.0 => /public/qmsoft/TeraChem/lib/libcudart.so.8.0 (0x00002b7b2843d000)
	libcrypto.so.10 => /lib64/libcrypto.so.10 (0x00002b7b286a3000)
	libssl.so.10 => /lib64/libssl.so.10 (0x00002b7b28a8a000)
	libm.so.6 => /lib64/libm.so.6 (0x00002b7b28cf7000)
	libcilkrts.so.5 => /public/qmsoft/TeraChem/lib/libcilkrts.so.5 (0x00002b7b28ff9000)
	libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00002b7b2923a000)
	libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00002b7b29542000)
	libpthread.so.0 => /lib64/libpthread.so.0 (0x00002b7b29758000)
	libdl.so.2 => /lib64/libdl.so.2 (0x00002b7b29976000)
	libc.so.6 => /lib64/libc.so.6 (0x00002b7b29b7a000)
	/lib64/ld-linux-x86-64.so.2 (0x00002b7af98ba000)
	libidn.so.11 => /lib64/libidn.so.11 (0x00002b7b29f27000)
	libssh2.so.1 => /lib64/libssh2.so.1 (0x00002b7b2a15a000)
	libssl3.so => /lib64/libssl3.so (0x00002b7b2a384000)
	libsmime3.so => /lib64/libsmime3.so (0x00002b7b2a5c6000)
	libnss3.so => /lib64/libnss3.so (0x00002b7b2a7ed000)
	libnssutil3.so => /lib64/libnssutil3.so (0x00002b7b2ab13000)
	libplds4.so => /lib64/libplds4.so (0x00002b7b2ad3f000)
	libplc4.so => /lib64/libplc4.so (0x00002b7b2af43000)
	libnspr4.so => /lib64/libnspr4.so (0x00002b7b2b148000)
	libgssapi_krb5.so.2 => /lib64/libgssapi_krb5.so.2 (0x00002b7b2b386000)
	libkrb5.so.3 => /lib64/libkrb5.so.3 (0x00002b7b2b5d2000)
	libk5crypto.so.3 => /lib64/libk5crypto.so.3 (0x00002b7b2b8b7000)
	libcom_err.so.2 => /lib64/libcom_err.so.2 (0x00002b7b2bae9000)
	liblber-2.4.so.2 => /lib64/liblber-2.4.so.2 (0x00002b7b2bced000)
	libldap-2.4.so.2 => /lib64/libldap-2.4.so.2 (0x00002b7b2befc000)
	libz.so.1 => /lib64/libz.so.1 (0x00002b7b2c14f000)
	librt.so.1 => /lib64/librt.so.1 (0x00002b7b2c365000)
	libnvidia-fatbinaryloader.so.396.26 => /lib64/libnvidia-fatbinaryloader.so.396.26 (0x00002b7b2c56d000)
	libkrb5support.so.0 => /lib64/libkrb5support.so.0 (0x00002b7b2c7b9000)
	libkeyutils.so.1 => /lib64/libkeyutils.so.1 (0x00002b7b2c9c8000)
	libresolv.so.2 => /lib64/libresolv.so.2 (0x00002b7b2cbcc000)
	libsasl2.so.3 => /lib64/libsasl2.so.3 (0x00002b7b2cde3000)
	libselinux.so.1 => /lib64/libselinux.so.1 (0x00002b7b2d000000)
	libcrypt.so.1 => /lib64/libcrypt.so.1 (0x00002b7b2d225000)
	libpcre.so.1 => /lib64/libpcre.so.1 (0x00002b7b2d45c000)
	liblzma.so.5 => /lib64/liblzma.so.5 (0x00002b7b2d6bd000)
#################################################################################################

       ********************** License Check **********************
       * Use license from: /public/qmsoft/TeraChem/license.dat
       * Available Host id: AC1F6B20BA82
       * Available Host id: AC1F6B20BA83
       * Available Host id: 52540000F6B3
       * Available Host id: 52540000F6B3
       * License Host id: AC1F6B20BA82
       * License expires: 2019-10-21
       ********************** License OK *************************
  _________________________________
 |         DFTD3 V3.0 Rev 2        |
 | S.Grimme, University Bonn       |
 |           Aug  2013             |
  _________________________________
 
 Please cite DFT-D3 work done with this code as:
 S. Grimme, J. Antony, S. Ehrlich and H. Krieg,
 J. Chem. Phys. 132 (2010), 154104
 If used with BJ-damping cite also
 S. Grimme, S. Ehrlich and L. Goerigk,
 J. Comput. Chem. 32 (2011), 1456-1465
 For DFT-D2 the reference is
 S. Grimme, J. Comput. Chem., 27 (2006), 1787-1799
 
Scratch directory: /tmp/lum/5ly6/refine12_weight_0.1_stpmax_8/ase/7/scr
Random number seed: 434231336

XYZ coordinates /home/lum/5ly6/refine12_weight_0.1_stpmax_8/ase/7/7_capping.xyz
Molden File Output: /tmp/lum/5ly6/refine12_weight_0.1_stpmax_8/ase/7/scr/7_capping.molden
Using basis set: 6-31g
Spin multiplicity: 1
DIIS will use up to 10 vectors.
WF convergence threshold: 3.00e-05
Using DIIS algorithm to converge WF
Maximum number of SCF iterations: 300
Incremental fock with rebuild every 8 iterations
Will switch to conventional Fock if diffuse functions are detected
X-matrix tolerance: 1.00e-04
PRECISION: DYNAMIC
DFT Functional requested: hf
Method: Hartree-Fock  with dispersion correction
Wavefunction: RESTRICTED
Initial guess generated by maximum overlap

********************************************
**** SINGLE POINT GRADIENT CALCULATIONS ****
********************************************
SCF:   Initial guess is taken from previous step
COSMO model for polarizable continuum model enabled

using 4 out of 4 CUDA devices
   Device 0:  GeForce GTX 1080 Ti, 11178MB, CC 6.1 -- CPU THREAD 0
   Device 1:  GeForce GTX 1080 Ti, 11178MB, CC 6.1 -- CPU THREAD 1
   Device 2:  GeForce GTX 1080 Ti, 11178MB, CC 6.1 -- CPU THREAD 2
   Device 3:  GeForce GTX 1080 Ti, 11178MB, CC 6.1 -- CPU THREAD 3
-------------------------------------------------------------------
Compiled with MAGMA support.  MAGMA parameters:
    Matrices larger than 5000 square will be treated with MAGMA
       (Change by setting the MagmaMinN environment variable)
    Magma will use 1 out of 4 GPUs
       (Change by setting the MagmaNGPUs environment variable)
-------------------------------------------------------------------
 CPU Memory Available: 8018.12 MegaWords 
 GPU Memory Available: 1141.31 MegaWords 
 Maximum recommended basis set size: 12200 basis functions
 (limited by GPU memory)
-------------------------------------------------------------------
Not using d-functions. Configuring GPUs accordingly.
0: CUBLAS initialized, available GPU memory: 8340MB
1: CUBLAS initialized, available GPU memory: 8170MB
2: CUBLAS initialized, available GPU memory: 8344MB
3: CUBLAS initialized, available GPU memory: 8170MB


Basis set:       6-31g
Total atoms:     470
Total charge:    -2
Total electrons: 1788 (894-alpha, 894-beta)
Number electrons modeled by ECPs: 0
Total orbitals:  2582
Total AO shells: 1644 (1175 S-shells; 469 P-shells; 0 D-shells; 0 F-shells; 0 G-shells)
Spin multiplicity: 1
Nuclear repulsion energy (QM atoms): 91139.320908979571 a.u.

DFTD Energy:    -3.8965254 hartree
=COSMO= Number of H atoms in QM atoms:236
=COSMO= Number of Heavy atoms in QM atoms:234
reached first line of InitCosmoSwigNoMatrix
q is allocated
B is allocated
Bz is allocated
z is allocated
c is allocated
=COSMO= No Matrix Cosmo Initialization finished.
=COSMO= ++++++++++++++++++++++++++++++ COSMO parameters ++++++++++++++++++++++++++++++
=COSMO= I. Cavity Information:
=COSMO= SAS(Solvent accesible surface) initialization finished
=COSMO= Time for initializing Molecular Surface:0.63602100 (sec)
=COSMO= Time for initializing cosmo calculation:0.23710600 (sec)
=COSMO= Cavity effective radius(Angstrom) (r_solv+r_vdw-dsc) was written into /tmp/lum/5ly6/refine12_weight_0.1_stpmax_8/ase/7/scr/ratom.txt
=COSMO= Solvent Dielectric Constant:78.390000
=COSMO= Cosmo Solvent radius:0.000000
=COSMO= Cosmo charge scaling method:0
=COSMO= Cavity built with Lebedev Grid
=COSMO= Grid points/QM Hydrogen: 110
=COSMO= Grid points/QM Heavy atom: 110
=COSMO= Herbert Switching-Gaussian method turned on
=COSMO= After removing points inside of SAS:
=COSMO= Total number of segments on molecular surface:24513
=COSMO= Number of segments belonging to QM atoms:24513
=COSMO= Total surface area of cavity: 3301.8635(Angstrom^2)
=COSMO= Total volume of cavity: 1901.4623 (Angstrom^3)
=COSMO= II. COSMO integral options:
=COSMO= Building COMSO c vector with original algorithm
=COSMO= COSMO one-electron integral threshold: 1e-12 
=COSMO= III. Linear solver options:
=COSMO= Initialize COSMO for A matrix in no matrix storage form
=COSMO= CG precondtioner:Jacobi
=COSMO= Tight CG convergence threshold:1e-06
=COSMO= CG dynamic threshold: on
=COSMO= Adjust CG convergence threshold dynamically
=COSMO= IV. PCM field read/write options:
=COSMO= PCM field is not written to files
=COSMO= No PCM field file is read in
=COSMO= ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                      *** Start SCF Iterations ***

 Iter     DIIS Error       Energy change         Energy              E_PCM      Time(s)
---------------------------------------------------------------------------------------
         >>> Purifying P... IDMP = 4.19e-14 <<<
THRESPDP set to 1.00e+00
   1     0.2608838023  -11732.1295359897  -11732.1295359897     -1.4004843346   15.54  
   2     0.1684330515     -55.7117079486  -11787.8412439383     -0.9337367370   15.34  
   3     0.0569997154      -7.7561363086  -11795.5973802469     -1.1669782546   13.10  
   4     0.0243743391      -1.0329891523  -11796.6303693992     -1.0582983775   13.09  
   5     0.0070116652      -0.1410981413  -11796.7714675405     -1.1186045021   13.81  
THRESPDP set to 5.24e-05
   6     0.0046690169      -0.0155188255  -11796.7869863660     -1.1297894387   18.13  
   7     0.0025961239      -0.0030262244  -11796.7900125904     -1.1351954438   12.22  
   8     0.0015884207      -0.0006462722  -11796.7906588625     -1.1379174315   10.16  
